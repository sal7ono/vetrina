<?php

namespace vetrinaBundle\Repository;

/**
 * VetementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class VetementRepository extends \Doctrine\ORM\EntityRepository
{
    public function bycategorie($categorie)
    {
        $qb= $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.categorie=:categorie')
                ->orderBy('u.id')
                ->setParameter('categorie',$categorie);
        return $qb->getQuery()->getResult();
    }
    public function recherche($chaine) {
        $qb= $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.nomvet like :chaine')
                ->orderBy('u.id')
               ->setParameter('chaine', '%'.$chaine.'%');
        return $qb->getQuery()->getResult();
    }
    
    public function findArray($array)
    {
        $qb = $this->createQueryBuilder('u')
                ->Select('u')
                ->Where('u.id IN (:array)')
                ->setParameter('array', $array);
        return $qb->getQuery()->getResult();
    }
    
     public function byclient($id)
    {
        $qb= $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.client=:id')
                
                ->setParameter('id',$id);
        return $qb->getQuery()->getResult();
    }
    
   public function bymarquecat($categorie,$marque)
    {
        $qb= $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.categorie=:categorie and u.marque=:marque')
                ->orderBy('u.id')
                ->setParameter('categorie',$categorie)
                ->setParameter('marque',$marque);
        return $qb->getQuery()->getResult();
    }
     public function byclientid($id)
    {
        $qb= $this->createQueryBuilder('u')
                ->select('u')
                ->where('u.client=:id')
                
                ->setParameter('id',$id);
        return $qb->getQuery()->getResult();
    }
    public function nombrevetement() {
        return $this->createQueryBuilder('u')
               
               ->select('COUNT(u)')
 
                        ->getQuery()
 
                        ->getSingleScalarResult();
    }  
    
    
}
 